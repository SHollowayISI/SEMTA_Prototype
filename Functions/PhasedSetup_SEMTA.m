function [out] = PhasedSetup_SEMTA(scenario)
%PHASEDSETUP_SEMTA Sets up Phased Array Toolbox system objects for SEMTA
%   Takes scenario.wave and scenario.traj as input and outputs
%   scenario.phased struct containing system objects for Phased Array
%   Toolbox simulation.

%% Unpack Variables

simsetup = scenario.simsetup;
traj = scenario.traj;
multi = scenario.multi;
flags = scenario.flags;

%% Set up constants

c = physconst('LightSpeed');
lambda = c/simsetup.f_c;

%% Check setting compatibility

% Check that timing parameters are compatible
parameterCheck(scenario);

%% Signal Setup

% Generate phase coded waveform using Phased Array Toolbox
%   Waveform for dechirp
out.rx_waveform = phased.LinearFMWaveform( ...
    ...
    'SampleRate',               simsetup.f_s, ...
    'DurationSpecification',    'Pulse width', ...
    'PulseWidth',               simsetup.t_ch, ...
    'PRF',                      simsetup.prf, ...
    'SweepBandwidth',           simsetup.bw, ...
    'SweepDirection',           'Up', ...
    'SweepInterval',            'Positive', ...
    'Envelope',                 'Rectangular', ...
    'OutputFormat',             'Pulses', ...
    'NumPulses',                flags.sim_rate);%simsetup.n_p);

%   Transmit waveform
out.tx_waveform = phased.LinearFMWaveform( ...
    ...
    'SampleRate',               simsetup.f_s, ...
    'DurationSpecification',    'Pulse width', ...
    'PulseWidth',               simsetup.t_tx, ...
    'PRF',                      simsetup.prf, ...
    'SweepBandwidth',           simsetup.bw * (simsetup.t_tx/simsetup.t_ch), ...
    'SweepDirection',           'Up', ...
    'SweepInterval',            'Positive', ...
    'Envelope',                 'Rectangular', ...
    'OutputFormat',             'Pulses', ...
    'NumPulses',                flags.sim_rate);%simsetup.n_p);

%% Target & Channel Setup

% Model target position and motion
out.target_plat = phased.Platform( ...
    ...
    'MotionModel',              'Custom', ...
    'CustomTrajectory',         traj.full_traj);

% Set up target to take RCS value at each object call
out.target = phased.RadarTarget( ...
    ...
    'EnablePolarization',       false, ...
    'MeanRCSSource',            'Input port', ...
    'Model',                    'Nonfluctuating', ...
    'OperatingFrequency',       simsetup.f_c, ...
    'PropagationSpeed',         c);

% Set up two-way free space path loss
out.target_chan = phased.FreeSpace( ...
    ...
    'PropagationSpeed',         c, ...
    'OperatingFrequency',       simsetup.f_c, ...
    'TwoWayPropagation',        true, ...
    'SampleRate',               simsetup.f_s);

%% Transceiver Setup

% Transceiver position and motion
out.radar_plat = phased.Platform( ...
    ...
    'MotionModel',              'Velocity', ...
    'InitialPosition',          multi.radar_pos(:,1), ...
    'Velocity',                 [0;0;0]);

% Set up antenna array parameters
out.antenna = phased.CosineAntennaElement( ...
    ...
    'FrequencyRange',           simsetup.f_c*[0.9 1.1], ...
    'CosinePower',              [1.5 40]);

if simsetup.n_ant == 1
    out.array = out.antenna;
else
    out.sub_array = phased.ULA( ...
        ...
        'Element',                  out.antenna, ...
        'NumElements',              simsetup.n_ant, ...
        'ArrayAxis',                'y', ...
        'ElementSpacing',           lambda/2);
    
    out.array = phased.ReplicatedSubarray( ...
        ...
        'Subarray',                 out.sub_array, ...
        'Layout',                   'Custom', ...
        'SubarrayPosition',         [0 0; 0 0; 0 0], ...
        'SubarrayNormal',           [0 0; 0 0]);
end

% Set up transmitter parameters
out.transmitter = phased.Transmitter( ...
    'PeakPower',                simsetup.tx_pow, ...
    'Gain',                     simsetup.tx_ant_gain, ...
    'InUseOutputPort',          true);

out.radiator = phased.Radiator( ...
    'Sensor',                   out.array, ...
    'PropagationSpeed',         c, ...
    'OperatingFrequency',       simsetup.f_c, ...
    'CombineRadiatedSignals',   true);

% Set up receiver parameters
out.collector = phased.Collector( ...
    'Sensor',                   out.array, ...
    'PropagationSpeed',         c, ...
    'OperatingFrequency',       simsetup.f_c, ...
    'Wavefront',                'Plane');

out.receiver = phased.ReceiverPreamp( ...
    'Gain',                     simsetup.rx_sys_gain + simsetup.rx_ant_gain,  ...
    'NoiseFigure',              simsetup.rx_nf, ...
    'SampleRate',               simsetup.f_s, ...
    'EnableInputPort',          true);


end

